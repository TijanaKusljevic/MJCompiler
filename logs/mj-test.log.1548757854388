INFO  11:01:13,602 - Compiling source file: C:\Users\tijana\Desktop\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  11:01:13,634 - #2 program
INFO  11:01:13,634 - #15 MJProgram
INFO  11:01:13,634 - #15 int
INFO  11:01:13,634 - #15 x
INFO  11:01:13,634 - #5 ;
INFO  11:01:13,634 - #15 int
INFO  11:01:13,634 - #15 y
INFO  11:01:13,634 - #5 ;
INFO  11:01:13,634 - #3 {
INFO  11:01:13,634 - #15 int
INFO  11:01:13,634 - #15 k
INFO  11:01:13,634 - #6 (
INFO  11:01:13,642 - #7 )
INFO  11:01:13,642 - #15 int
INFO  11:01:13,642 - #15 c
INFO  11:01:13,642 - #5 ;
INFO  11:01:13,642 - #3 {
INFO  11:01:13,642 - #15 c
INFO  11:01:13,642 - #12 =
INFO  11:01:13,644 - #14 1
INFO  11:01:13,644 - #5 ;
INFO  11:01:13,644 - #10 return
INFO  11:01:13,644 - #15 c
INFO  11:01:13,644 - #11 +
INFO  11:01:13,644 - #14 2
INFO  11:01:13,644 - #5 ;
INFO  11:01:13,644 - #4 }
INFO  11:01:13,644 - #15 int
INFO  11:01:13,644 - #15 main
INFO  11:01:13,644 - #6 (
INFO  11:01:13,644 - #7 )
INFO  11:01:13,644 - #3 {
INFO  11:01:13,644 - #15 y
INFO  11:01:13,644 - #12 =
INFO  11:01:13,644 - #14 2
INFO  11:01:13,644 - #22 *
INFO  11:01:13,644 - #14 5
INFO  11:01:13,644 - #5 ;
INFO  11:01:13,644 - #15 y
INFO  11:01:13,644 - #12 =
INFO  11:01:13,644 - #15 y
INFO  11:01:13,644 - #21 -
INFO  11:01:13,644 - #14 1
INFO  11:01:13,644 - #5 ;
INFO  11:01:13,644 - #15 y
INFO  11:01:13,644 - #18 ++
INFO  11:01:13,644 - #5 ;
INFO  11:01:13,644 - #15 x
INFO  11:01:13,644 - #12 =
INFO  11:01:13,644 - #15 y
INFO  11:01:13,644 - #11 +
INFO  11:01:13,644 - #14 2
INFO  11:01:13,644 - #5 ;
INFO  11:01:13,644 - #15 y
INFO  11:01:13,644 - #12 =
INFO  11:01:13,644 - #15 k
INFO  11:01:13,644 - #6 (
INFO  11:01:13,644 - #7 )
INFO  11:01:13,644 - #11 +
INFO  11:01:13,654 - #14 3
INFO  11:01:13,654 - #5 ;
INFO  11:01:13,654 - #15 y
INFO  11:01:13,654 - #12 =
INFO  11:01:13,654 - #15 x
INFO  11:01:13,654 - #29 [
INFO  11:01:13,654 - #14 2
INFO  11:01:13,654 - #30 ]
INFO  11:01:13,654 - #5 ;
INFO  11:01:13,654 - #3 {
INFO  11:01:13,654 - #15 y
INFO  11:01:13,654 - #12 =
INFO  11:01:13,654 - #14 3
INFO  11:01:13,654 - #5 ;
INFO  11:01:13,654 - #3 {
INFO  11:01:13,654 - #15 x
INFO  11:01:13,654 - #12 =
INFO  11:01:13,654 - #15 k
INFO  11:01:13,654 - #6 (
INFO  11:01:13,654 - #7 )
INFO  11:01:13,662 - #5 ;
INFO  11:01:13,662 - #4 }
INFO  11:01:13,662 - #4 }
INFO  11:01:13,662 - #34 for
INFO  11:01:13,662 - #6 (
INFO  11:01:13,662 - #15 x
INFO  11:01:13,662 - #12 =
INFO  11:01:13,662 - #14 4
INFO  11:01:13,662 - #5 ;
INFO  11:01:13,662 - #15 x
INFO  11:01:13,662 - #39 <
INFO  11:01:13,664 - #14 6
INFO  11:01:13,664 - #35 ||
INFO  11:01:13,664 - #15 y
INFO  11:01:13,664 - #39 <
INFO  11:01:13,664 - #14 1000
INFO  11:01:13,664 - #36 &&
INFO  11:01:13,664 - #15 y
INFO  11:01:13,664 - #40 >
INFO  11:01:13,664 - #14 0
INFO  11:01:13,664 - #5 ;
INFO  11:01:13,664 - #15 x
INFO  11:01:13,664 - #18 ++
INFO  11:01:13,664 - #7 )
INFO  11:01:13,664 - #3 {
INFO  11:01:13,664 - #15 y
INFO  11:01:13,664 - #12 =
INFO  11:01:13,664 - #15 x
INFO  11:01:13,664 - #5 ;
INFO  11:01:13,664 - #4 }
INFO  11:01:13,664 - #16 if
INFO  11:01:13,664 - #6 (
INFO  11:01:13,664 - #15 x
INFO  11:01:13,664 - #37 ==
INFO  11:01:13,664 - #14 5
INFO  11:01:13,664 - #7 )
INFO  11:01:13,664 - #3 {
INFO  11:01:13,664 - #15 y
INFO  11:01:13,664 - #12 =
INFO  11:01:13,672 - #14 347
INFO  11:01:13,672 - #5 ;
INFO  11:01:13,672 - #4 }
INFO  11:01:13,672 - #15 aa
INFO  11:01:13,672 - #15 u9
INFO  11:01:13,672 - #14 4
INFO  11:01:13,672 - #9 print
INFO  11:01:13,672 - #6 (
INFO  11:01:13,672 - #15 y
INFO  11:01:13,672 - #7 )
INFO  11:01:13,672 - #5 ;
INFO  11:01:13,672 - #20 read
INFO  11:01:13,672 - #6 (
INFO  11:01:13,672 - #15 y
INFO  11:01:13,672 - #7 )
INFO  11:01:13,672 - #5 ;
INFO  11:01:13,672 - #10 return
INFO  11:01:13,672 - #14 0
INFO  11:01:13,672 - #5 ;
INFO  11:01:13,672 - #4 }
INFO  11:01:13,672 - #4 }
