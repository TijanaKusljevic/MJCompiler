INFO  10:57:36,667 - Compiling source file: C:\Users\tijana\Desktop\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  10:57:36,698 - #2 program
INFO  10:57:36,698 - #15 MJProgram
INFO  10:57:36,698 - #15 int
INFO  10:57:36,698 - #15 x
INFO  10:57:36,698 - #5 ;
INFO  10:57:36,698 - #15 int
INFO  10:57:36,698 - #15 y
INFO  10:57:36,698 - #5 ;
INFO  10:57:36,698 - #3 {
INFO  10:57:36,698 - #15 int
INFO  10:57:36,698 - #15 k
INFO  10:57:36,698 - #6 (
INFO  10:57:36,698 - #7 )
INFO  10:57:36,698 - #15 int
INFO  10:57:36,698 - #15 c
INFO  10:57:36,698 - #5 ;
INFO  10:57:36,698 - #3 {
INFO  10:57:36,698 - #15 c
INFO  10:57:36,698 - #12 =
INFO  10:57:36,698 - #14 1
INFO  10:57:36,698 - #5 ;
INFO  10:57:36,698 - #10 return
INFO  10:57:36,698 - #15 c
INFO  10:57:36,698 - #11 +
INFO  10:57:36,698 - #14 2
INFO  10:57:36,698 - #5 ;
INFO  10:57:36,698 - #4 }
INFO  10:57:36,698 - #15 int
INFO  10:57:36,698 - #15 main
INFO  10:57:36,698 - #6 (
INFO  10:57:36,698 - #7 )
INFO  10:57:36,698 - #3 {
INFO  10:57:36,698 - #15 y
INFO  10:57:36,698 - #12 =
INFO  10:57:36,698 - #14 2
INFO  10:57:36,698 - #22 *
INFO  10:57:36,698 - #14 5
INFO  10:57:36,698 - #5 ;
INFO  10:57:36,698 - #15 y
INFO  10:57:36,698 - #12 =
INFO  10:57:36,698 - #15 y
INFO  10:57:36,698 - #21 -
INFO  10:57:36,698 - #14 1
INFO  10:57:36,698 - #5 ;
INFO  10:57:36,698 - #15 y
INFO  10:57:36,698 - #18 ++
INFO  10:57:36,698 - #5 ;
INFO  10:57:36,698 - #15 x
INFO  10:57:36,698 - #12 =
INFO  10:57:36,698 - #15 y
INFO  10:57:36,698 - #11 +
INFO  10:57:36,698 - #14 2
INFO  10:57:36,698 - #5 ;
INFO  10:57:36,698 - #15 y
INFO  10:57:36,698 - #12 =
INFO  10:57:36,698 - #15 k
INFO  10:57:36,698 - #6 (
INFO  10:57:36,698 - #7 )
INFO  10:57:36,698 - #11 +
INFO  10:57:36,698 - #14 3
INFO  10:57:36,698 - #5 ;
INFO  10:57:36,698 - #15 y
INFO  10:57:36,698 - #12 =
INFO  10:57:36,698 - #15 x
INFO  10:57:36,698 - #29 [
INFO  10:57:36,698 - #14 2
INFO  10:57:36,698 - #30 ]
INFO  10:57:36,698 - #5 ;
INFO  10:57:36,698 - #3 {
INFO  10:57:36,698 - #15 y
INFO  10:57:36,698 - #12 =
INFO  10:57:36,698 - #14 3
INFO  10:57:36,698 - #5 ;
INFO  10:57:36,698 - #3 {
INFO  10:57:36,698 - #15 x
INFO  10:57:36,698 - #12 =
INFO  10:57:36,698 - #15 k
INFO  10:57:36,698 - #6 (
INFO  10:57:36,698 - #7 )
INFO  10:57:36,698 - #5 ;
INFO  10:57:36,698 - #4 }
INFO  10:57:36,698 - #4 }
INFO  10:57:36,698 - #34 for
INFO  10:57:36,698 - #6 (
INFO  10:57:36,698 - #15 x
INFO  10:57:36,698 - #12 =
INFO  10:57:36,698 - #14 4
INFO  10:57:36,698 - #5 ;
INFO  10:57:36,698 - #15 x
INFO  10:57:36,698 - #39 <
INFO  10:57:36,698 - #14 6
INFO  10:57:36,698 - #35 ||
INFO  10:57:36,698 - #15 y
INFO  10:57:36,698 - #39 <
INFO  10:57:36,698 - #14 1000
INFO  10:57:36,698 - #36 &&
INFO  10:57:36,698 - #15 y
INFO  10:57:36,714 - #40 >
INFO  10:57:36,714 - #14 0
INFO  10:57:36,714 - #5 ;
INFO  10:57:36,714 - #15 x
INFO  10:57:36,714 - #18 ++
INFO  10:57:36,714 - #7 )
INFO  10:57:36,714 - #3 {
INFO  10:57:36,714 - #15 y
INFO  10:57:36,714 - #12 =
INFO  10:57:36,714 - #15 x
INFO  10:57:36,714 - #5 ;
INFO  10:57:36,714 - #4 }
INFO  10:57:36,714 - #16 if
INFO  10:57:36,714 - #6 (
INFO  10:57:36,714 - #15 x
INFO  10:57:36,714 - #37 ==
INFO  10:57:36,714 - #14 5
INFO  10:57:36,714 - #7 )
INFO  10:57:36,714 - #3 {
INFO  10:57:36,714 - #15 y
INFO  10:57:36,714 - #12 =
INFO  10:57:36,714 - #14 347
INFO  10:57:36,714 - #5 ;
INFO  10:57:36,714 - #4 }
INFO  10:57:36,714 - #15 aa
INFO  10:57:36,714 - #15 u9
INFO  10:57:36,714 - #14 4
INFO  10:57:36,714 - #9 print
INFO  10:57:36,714 - #6 (
INFO  10:57:36,714 - #15 y
INFO  10:57:36,714 - #7 )
INFO  10:57:36,714 - #5 ;
INFO  10:57:36,714 - #20 read
INFO  10:57:36,714 - #6 (
INFO  10:57:36,714 - #15 y
INFO  10:57:36,714 - #7 )
INFO  10:57:36,714 - #5 ;
INFO  10:57:36,729 - #10 return
INFO  10:57:36,729 - #14 0
INFO  10:57:36,729 - #5 ;
INFO  10:57:36,729 - #4 }
INFO  10:57:36,729 - #4 }
