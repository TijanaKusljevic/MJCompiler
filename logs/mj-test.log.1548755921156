INFO  10:58:21,692 - Compiling source file: C:\Users\tijana\Desktop\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  10:58:21,719 - #2 program
INFO  10:58:21,720 - #15 MJProgram
INFO  10:58:21,720 - #15 int
INFO  10:58:21,720 - #15 x
INFO  10:58:21,720 - #5 ;
INFO  10:58:21,721 - #15 int
INFO  10:58:21,721 - #15 y
INFO  10:58:21,721 - #5 ;
INFO  10:58:21,721 - #3 {
INFO  10:58:21,721 - #15 int
INFO  10:58:21,722 - #15 k
INFO  10:58:21,722 - #6 (
INFO  10:58:21,722 - #7 )
INFO  10:58:21,722 - #15 int
INFO  10:58:21,722 - #15 c
INFO  10:58:21,722 - #5 ;
INFO  10:58:21,723 - #3 {
INFO  10:58:21,723 - #15 c
INFO  10:58:21,723 - #12 =
INFO  10:58:21,723 - #14 1
INFO  10:58:21,723 - #5 ;
INFO  10:58:21,723 - #10 return
INFO  10:58:21,724 - #15 c
INFO  10:58:21,724 - #11 +
INFO  10:58:21,724 - #14 2
INFO  10:58:21,724 - #5 ;
INFO  10:58:21,724 - #4 }
INFO  10:58:21,724 - #15 int
INFO  10:58:21,725 - #15 main
INFO  10:58:21,725 - #6 (
INFO  10:58:21,725 - #7 )
INFO  10:58:21,725 - #3 {
INFO  10:58:21,725 - #15 y
INFO  10:58:21,725 - #12 =
INFO  10:58:21,725 - #14 2
INFO  10:58:21,725 - #22 *
INFO  10:58:21,725 - #14 5
INFO  10:58:21,725 - #5 ;
INFO  10:58:21,726 - #15 y
INFO  10:58:21,726 - #12 =
INFO  10:58:21,726 - #15 y
INFO  10:58:21,726 - #21 -
INFO  10:58:21,726 - #14 1
INFO  10:58:21,726 - #5 ;
INFO  10:58:21,726 - #15 y
INFO  10:58:21,726 - #18 ++
INFO  10:58:21,727 - #5 ;
INFO  10:58:21,727 - #15 x
INFO  10:58:21,727 - #12 =
INFO  10:58:21,727 - #15 y
INFO  10:58:21,727 - #11 +
INFO  10:58:21,727 - #14 2
INFO  10:58:21,727 - #5 ;
INFO  10:58:21,728 - #15 y
INFO  10:58:21,728 - #12 =
INFO  10:58:21,728 - #15 k
INFO  10:58:21,728 - #6 (
INFO  10:58:21,728 - #7 )
INFO  10:58:21,729 - #11 +
INFO  10:58:21,738 - #14 3
INFO  10:58:21,738 - #5 ;
INFO  10:58:21,738 - #15 y
INFO  10:58:21,738 - #12 =
INFO  10:58:21,739 - #15 x
INFO  10:58:21,739 - #29 [
INFO  10:58:21,739 - #14 2
INFO  10:58:21,739 - #30 ]
INFO  10:58:21,739 - #5 ;
INFO  10:58:21,739 - #3 {
INFO  10:58:21,739 - #15 y
INFO  10:58:21,740 - #12 =
INFO  10:58:21,740 - #14 3
INFO  10:58:21,740 - #5 ;
INFO  10:58:21,740 - #3 {
INFO  10:58:21,740 - #15 x
INFO  10:58:21,740 - #12 =
INFO  10:58:21,740 - #15 k
INFO  10:58:21,741 - #6 (
INFO  10:58:21,741 - #7 )
INFO  10:58:21,741 - #5 ;
INFO  10:58:21,741 - #4 }
INFO  10:58:21,742 - #4 }
INFO  10:58:21,742 - #34 for
INFO  10:58:21,742 - #6 (
INFO  10:58:21,742 - #15 x
INFO  10:58:21,742 - #12 =
INFO  10:58:21,742 - #14 4
INFO  10:58:21,743 - #5 ;
INFO  10:58:21,743 - #15 x
INFO  10:58:21,743 - #39 <
INFO  10:58:21,743 - #14 6
INFO  10:58:21,743 - #35 ||
INFO  10:58:21,744 - #15 y
INFO  10:58:21,744 - #39 <
INFO  10:58:21,745 - #14 1000
INFO  10:58:21,745 - #36 &&
INFO  10:58:21,745 - #15 y
INFO  10:58:21,745 - #40 >
INFO  10:58:21,746 - #14 0
INFO  10:58:21,746 - #5 ;
INFO  10:58:21,746 - #15 x
INFO  10:58:21,746 - #18 ++
INFO  10:58:21,746 - #7 )
INFO  10:58:21,747 - #3 {
INFO  10:58:21,747 - #15 y
INFO  10:58:21,747 - #12 =
INFO  10:58:21,747 - #15 x
INFO  10:58:21,748 - #5 ;
INFO  10:58:21,750 - #4 }
INFO  10:58:21,750 - #16 if
INFO  10:58:21,750 - #6 (
INFO  10:58:21,750 - #15 x
INFO  10:58:21,750 - #37 ==
INFO  10:58:21,752 - #14 5
INFO  10:58:21,752 - #7 )
INFO  10:58:21,752 - #3 {
INFO  10:58:21,753 - #15 y
INFO  10:58:21,753 - #12 =
INFO  10:58:21,753 - #14 347
INFO  10:58:21,753 - #5 ;
INFO  10:58:21,754 - #4 }
INFO  10:58:21,754 - #15 aa
INFO  10:58:21,754 - #15 u9
INFO  10:58:21,755 - #14 4
INFO  10:58:21,755 - #9 print
INFO  10:58:21,755 - #6 (
INFO  10:58:21,755 - #15 y
INFO  10:58:21,755 - #7 )
INFO  10:58:21,756 - #5 ;
INFO  10:58:21,756 - #20 read
INFO  10:58:21,756 - #6 (
INFO  10:58:21,756 - #15 y
INFO  10:58:21,756 - #7 )
INFO  10:58:21,756 - #5 ;
INFO  10:58:21,757 - #10 return
INFO  10:58:21,757 - #14 0
INFO  10:58:21,757 - #5 ;
INFO  10:58:21,757 - #4 }
INFO  10:58:21,757 - #4 }
