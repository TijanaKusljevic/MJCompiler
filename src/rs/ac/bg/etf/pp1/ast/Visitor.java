// generated with ast extension for cup
// version 0.8
// 21/5/2019 17:55:39


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(NtSquareLeft NtSquareLeft);
    public void visit(FormPars FormPars);
    public void visit(MulopList MulopList);
    public void visit(NumConst NumConst);
    public void visit(EndCondTerm EndCondTerm);
    public void visit(Factor Factor);
    public void visit(Statement Statement);
    public void visit(NonterminalIf NonterminalIf);
    public void visit(MatchedList MatchedList);
    public void visit(GetOut GetOut);
    public void visit(ConstList ConstList);
    public void visit(Relop Relop);
    public void visit(FormalParamList FormalParamList);
    public void visit(NtDes NtDes);
    public void visit(Expr Expr);
    public void visit(ConditionForStart ConditionForStart);
    public void visit(Unmatched Unmatched);
    public void visit(OrConditionList OrConditionList);
    public void visit(NtTrue NtTrue);
    public void visit(ForStatementStart ForStatementStart);
    public void visit(ActualParamList ActualParamList);
    public void visit(OperationList OperationList);
    public void visit(EndCF EndCF);
    public void visit(VarDeclaration VarDeclaration);
    public void visit(DesignatorList DesignatorList);
    public void visit(Condition Condition);
    public void visit(NtCondFact NtCondFact);
    public void visit(Mulop Mulop);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(DesignatorStatementFor DesignatorStatementFor);
    public void visit(NtSquareRight NtSquareRight);
    public void visit(Addop Addop);
    public void visit(StatementList StatementList);
    public void visit(IdentList IdentList);
    public void visit(EnumList EnumList);
    public void visit(ConstDecl ConstDecl);
    public void visit(ConditionFor ConditionFor);
    public void visit(ForStatementEnd ForStatementEnd);
    public void visit(Change Change);
    public void visit(Squares Squares);
    public void visit(ActualPars ActualPars);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(MethodType MethodType);
    public void visit(AndConditionList AndConditionList);
    public void visit(ForStart ForStart);
    public void visit(NtHelp NtHelp);
    public void visit(NtNewInit NtNewInit);
    public void visit(Matched Matched);
    public void visit(VarDeclList VarDeclList);
    public void visit(CondFact CondFact);
    public void visit(NtSquareBrace NtSquareBrace);
    public void visit(NtLev NtLev);
    public void visit(NextGroupAnd NextGroupAnd);
    public void visit(NtFalse NtFalse);
    public void visit(NtRead NtRead);
    public void visit(ConditionEnd ConditionEnd);
    public void visit(StartIf StartIf);
    public void visit(Tar Tar);
    public void visit(SubOp SubOp);
    public void visit(Addopplus Addopplus);
    public void visit(NtD NtD);
    public void visit(NtL NtL);
    public void visit(Novo Novo);
    public void visit(NoDesignatorList NoDesignatorList);
    public void visit(DesignatorListSquare DesignatorListSquare);
    public void visit(DesignatorListPoint DesignatorListPoint);
    public void visit(Greaterequ Greaterequ);
    public void visit(Lessequal Lessequal);
    public void visit(Greaterthen Greaterthen);
    public void visit(Lessthen Lessthen);
    public void visit(NotEqu NotEqu);
    public void visit(EquEqu EquEqu);
    public void visit(NCondFact NCondFact);
    public void visit(CondFactTwo CondFactTwo);
    public void visit(CondFactOne CondFactOne);
    public void visit(NoAndConditionList NoAndConditionList);
    public void visit(YesAndConditionList YesAndConditionList);
    public void visit(CondTerm CondTerm);
    public void visit(EndCondTermDerived1 EndCondTermDerived1);
    public void visit(NextGroupAndDerived1 NextGroupAndDerived1);
    public void visit(NoOrConditionList NoOrConditionList);
    public void visit(YesOrConditionList YesOrConditionList);
    public void visit(ConditionEndDerived1 ConditionEndDerived1);
    public void visit(ConditErr ConditErr);
    public void visit(Condit Condit);
    public void visit(NoConditionFor NoConditionFor);
    public void visit(YesConditionFor YesConditionFor);
    public void visit(NoDesignatorStatementFor NoDesignatorStatementFor);
    public void visit(YesDesignatorStatementFor YesDesignatorStatementFor);
    public void visit(Designator Designator);
    public void visit(ActualParam ActualParam);
    public void visit(ActualParams ActualParams);
    public void visit(NoActuals NoActuals);
    public void visit(Actuals Actuals);
    public void visit(False False);
    public void visit(True True);
    public void visit(NoNewInitList NoNewInitList);
    public void visit(YesNewInitList YesNewInitList);
    public void visit(NtSquareR NtSquareR);
    public void visit(NtSquareL NtSquareL);
    public void visit(NtSB NtSB);
    public void visit(NtHelpDerived1 NtHelpDerived1);
    public void visit(NewInit NewInit);
    public void visit(NewBig NewBig);
    public void visit(NewSmall NewSmall);
    public void visit(NTrue NTrue);
    public void visit(NFalse NFalse);
    public void visit(ExprFactor ExprFactor);
    public void visit(CharConst CharConst);
    public void visit(FuncCall FuncCall);
    public void visit(Var Var);
    public void visit(Const Const);
    public void visit(Mod Mod);
    public void visit(Div Div);
    public void visit(Mul Mul);
    public void visit(NoMulopList NoMulopList);
    public void visit(YesMulopList YesMulopList);
    public void visit(Term Term);
    public void visit(Korencic Korencic);
    public void visit(ExprMinus ExprMinus);
    public void visit(TermExpr TermExpr);
    public void visit(AddExpr AddExpr);
    public void visit(JosTernarni JosTernarni);
    public void visit(Ternarni Ternarni);
    public void visit(DesignatorStatementList DesignatorStatementList);
    public void visit(DesignatorMinus DesignatorMinus);
    public void visit(DesignatorPlus DesignatorPlus);
    public void visit(Assignment Assignment);
    public void visit(StartIfDerived1 StartIfDerived1);
    public void visit(EndElse EndElse);
    public void visit(StartElse StartElse);
    public void visit(Break Break);
    public void visit(ChangeFor ChangeFor);
    public void visit(FRead FRead);
    public void visit(NRead NRead);
    public void visit(ForEnd ForEnd);
    public void visit(ForStatementEndDerived1 ForStatementEndDerived1);
    public void visit(ForStatementStartDerived1 ForStatementStartDerived1);
    public void visit(ForStartDerived1 ForStartDerived1);
    public void visit(ConditionForStartDerived1 ConditionForStartDerived1);
    public void visit(GetOutDerived1 GetOutDerived1);
    public void visit(EndCondFor EndCondFor);
    public void visit(For For);
    public void visit(StatementDefinition StatementDefinition);
    public void visit(Continue Continue);
    public void visit(ChangeBreak ChangeBreak);
    public void visit(Read Read);
    public void visit(DesignatorStatementMatched DesignatorStatementMatched);
    public void visit(MatchedIf MatchedIf);
    public void visit(ReturnNoExpr ReturnNoExpr);
    public void visit(ReturnExpr ReturnExpr);
    public void visit(PrintStmt PrintStmt);
    public void visit(ErrAssignment ErrAssignment);
    public void visit(NonterminalIfDerived1 NonterminalIfDerived1);
    public void visit(FinishedIf FinishedIf);
    public void visit(UnmatchedIfElse UnmatchedIfElse);
    public void visit(UnmatchedIf UnmatchedIf);
    public void visit(UnmachedStmt UnmachedStmt);
    public void visit(MatchedStmt MatchedStmt);
    public void visit(NoStmt NoStmt);
    public void visit(Statements Statements);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(FormalParamError FormalParamError);
    public void visit(SingleFormalParamDecl SingleFormalParamDecl);
    public void visit(FormalParamDecls FormalParamDecls);
    public void visit(NoFormParam NoFormParam);
    public void visit(FormParams FormParams);
    public void visit(MetodTypeVoid MetodTypeVoid);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(Type Type);
    public void visit(ConstantDeclarationChar ConstantDeclarationChar);
    public void visit(ConstantDeclarationFalse ConstantDeclarationFalse);
    public void visit(ConstantDeclarationTrue ConstantDeclarationTrue);
    public void visit(ConstantDeclarationNumber ConstantDeclarationNumber);
    public void visit(ConstantDeclaration ConstantDeclaration);
    public void visit(NoEnumList NoEnumList);
    public void visit(YesEnumList YesEnumList);
    public void visit(NoNumConst NoNumConst);
    public void visit(YesNumConst YesNumConst);
    public void visit(EnumName EnumName);
    public void visit(NoIdentList NoIdentList);
    public void visit(YesIdentList YesIdentList);
    public void visit(NoConstList NoConstList);
    public void visit(YesConstList YesConstList);
    public void visit(NoSquares NoSquares);
    public void visit(YesSquares YesSquares);
    public void visit(FirstEnum FirstEnum);
    public void visit(EnumiNovo EnumiNovo);
    public void visit(EnumDecl EnumDecl);
    public void visit(ConstDeclVarDecl ConstDeclVarDecl);
    public void visit(VarDecl VarDecl);
    public void visit(VarDeclarationsError VarDeclarationsError);
    public void visit(NoVarDecl NoVarDecl);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
